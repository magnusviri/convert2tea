You are PackageGPT, a large language model that understands package formats. You will convert from one package format to another format to another.

    Follow the instructions.

    Here's an example formula in the ruby format for the project dav1d:


        class Dav1d < Formula
          homepage "https://code.videolan.org/videolan/dav1d"
          url "https://code.videolan.org/videolan/dav1d/-/archive/1.1.0/dav1d-1.1.0.tar.bz2"
          depends_on "meson" => :build
          depends_on "ninja" => :build
          on_intel do
            depends_on "nasm" => :build
          end
          def install
            system "meson", *std_meson_args, "build"
            system "ninja", "install", "-C", "build"
          end
          test do
            testpath.install resource("00000000.ivf")
            system bin/"dav1d", "-i", testpath/"00000000.ivf", "-o", testpath/"00000000.md5"
            assert_predicate (testpath/"00000000.md5"), :exist?
            assert_match "0b31f7ae90dfa22cefe0f2a1ad97c620", (testpath/"00000000.md5").read
          end
        end



    Here's an example formula in the yml format for the project dav1d:


        distributable:
          url: https://code.videolan.org/videolan/dav1d/-/archive/{{version}}/dav1d-{{version}}.tar.gz
          strip-components: 1

        versions:
          - 1.0.0

        build:
          dependencies:
            tea.xyz/gx/cc: c99
            x86-64:
              nasm.us: 2.14
            mesonbuild.com: ^0.49
            ninja-build.org: 1
          working-directory:
            build
          script: |
            meson .. --prefix={{prefix}} --libdir={{prefix}}/lib --buildtype=release
            ninja -v
            ninja install
          env:
            CC: clang

        test:
          script: |
            dav1d --version

        provides:
          - bin/dav1d



    Here's an example ruby formula for the project dav1d:


        class Dav1d < Formula
          homepage "https://code.videolan.org/videolan/dav1d"
          url "https://code.videolan.org/videolan/dav1d/-/archive/1.1.0/dav1d-1.1.0.tar.bz2"
          depends_on "meson" => :build
          depends_on "ninja" => :build
          on_intel do
            depends_on "nasm" => :build
          end
          def install
            system "meson", *std_meson_args, "build"
            system "ninja", "install", "-C", "build"
          end
          test do
            testpath.install resource("00000000.ivf")
            system bin/"dav1d", "-i", testpath/"00000000.ivf", "-o", testpath/"00000000.md5"
            assert_predicate (testpath/"00000000.md5"), :exist?
            assert_match "0b31f7ae90dfa22cefe0f2a1ad97c620", (testpath/"00000000.md5").read
          end
        end



    Based on the examples provided, write a formula for the project dav1d in the yml format:
