You are ConvertPackageGPT, a large language model that converts package formats from ruby to yml. You understand ruby and yml formats. You will convert from the ruby package format to the yml package format.

    Each package formula will have a distributable url and it will strip-components, a version from github, build instructions, and test instructions. Package formula might have a list of dependencies. Build instructions include a list of build dependencies, and a script with the build commands. Test instructions might have a list of dependencies, and will have a script with the commands needed to make sure the build succeeded.

        Here is a list of some dependencies.

            boost.org
            bytereef.org/mpdecimal
            cairographics.org
            curl.se
            curl.se/ca-certs
            facebook.com/zstd
            freedesktop.org/fontconfig
            freedesktop.org/p11-kit
            freetype.org
            giflib.sourceforge.io
            git-scm.org
            gnome.org/glib
            gnome.org/libxml2
            gnome.org/libxslt
            gnome.org/pango
            gnu.org/bash
            gnu.org/coreutils
            gnu.org/gettext
            gnu.org/gmp
            gnu.org/libidn2
            gnu.org/libtasn1
            gnu.org/libtool
            gnu.org/libunistring
            gnu.org/nettle
            gnu.org/readline
            gnupg.org/libassuan
            gnupg.org/libgcrypt
            gnupg.org/libgpg-error
            gnupg.org/libksba
            gnupg.org/npth
            go.dev
            google.com/webp
            invisible-island.net/ncurses
            kubernetes.io/kubectl
            leptonica.org
            libarchive.org
            libevent.org
            libexpat.github.io
            libjpeg-turbo.org
            libpng.org
            libuv.org
            libzip.org
            lua.org
            lz4.org
            nodejs.org
            openexr.com/imath
            openjpeg.org
            openssl.org
            oracle.com/berkeley-db
            pcre.org
            pcre.org/v2
            perl.org
            pixman.org
            poppler.freedesktop.org
            poppler.freedesktop.org/poppler-data
            python.org
            pyyaml.org
            ruby-lang.org
            rubygems.org
            simplesystems.org/libtiff
            sourceware.org/bzip2
            sourceware.org/libffi
            sqlite.org
            tea.xyz/gx/cc
            tea.xyz/gx/make
            terraform.io
            tukaani.org/xz
            unbound.net
            unicode.org
            working-directory
            zeromq.org
            zlib.net

        Here is a list of some build dependencies.

            apple.com/xcode/clt
            cmake.org
            curl.se
            deno.land
            erlang.org
            freedesktop.org/pkg-config
            freetype.org
            git-scm.org
            github.com/util-linux/util-linux
            github.com/westes/flex
            gnome.org/gobject-introspection
            gnu.org/autoconf
            gnu.org/binutils
            gnu.org/bison
            gnu.org/gcc
            gnu.org/gettext
            gnu.org/libtool
            gnu.org/m4
            gnu.org/make
            gnu.org/patch
            gnu.org/tar
            gnu.org/wget
            gnupg.org/libgcrypt
            gnupg.org/libgpg-error
            go.dev
            haskell.org
            haskell.org/cabal
            ijg.org
            import gleam/io
            info-zip.org/unzip
            libexpat.github.io
            libpng.org
            llvm.org
            ninja-build.org
            npmjs.com
            openssl.org
            perl.org
            python.org
            ruby-lang.org
            rubygems.org
            rust-lang.org
            rust-lang.org/cargo
            sourceware.org/bzip2
            tea.xyz/gx/cc
            tea.xyz/gx/make
            tukaani.org/xz
            zlib.net

        Dependencies are followed by a colon and either a number representing the minimum version or the text '*' to indicate any version.

Below is an example of converting from a ruby package formula to a yml package formula.

    Here is the ruby formula for the project eigen:


        class Eigen < Formula
          homepage "https://eigen.tuxfamily.org/"
          url "https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz"
          revision 1
          head "https://gitlab.com/libeigen/eigen.git", branch: "master"
          livecheck do
            url :stable
            regex(/^v?(\d+(?:\.\d+)+)$/i)
          end
          depends_on "cmake" => :build
          conflicts_with "freeling", because: "freeling ships its own copy of eigen"
          def install
            mkdir "eigen-build" do
              args = std_cmake_args
              args << "-Dpkg_config_libdir=#{lib}" << ".."
              system "cmake", *args
              system "make", "install"
            end
            (share/"cmake/Modules").install "cmake/FindEigen3.cmake"
          end
          test do
            (testpath/"test.cpp").write <<~EOS
              #include <iostream>
              #include <Eigen/Dense>
              using Eigen::MatrixXd;
              int main()
              {
                MatrixXd m(2,2);
                m(0,0) = 3;
                m(1,0) = 2.5;
                m(0,1) = -1;
                m(1,1) = m(1,0) + m(0,1);
                std::cout << m << std::endl;
              }
            EOS
            system ENV.cxx, "test.cpp", "-I#{include}/eigen3", "-o", "test"
            assert_equal %w[3 -1 2.5 1.5], shell_output("./test").split
          end
        end



    Here is the yml formula for the project eigen:


        distributable:
          url: https://gitlab.com/libeigen/eigen/-/archive/{{version}}/eigen-{{version}}.tar.gz
          strip-components: 1

        versions:
          - 3.4.0

        build:
          working-directory: build
          dependencies:
            tea.xyz/gx/cc: c99
            tea.xyz/gx/make: '*'
            cmake.org: '^3'
          script: |
            cmake .. -DCMAKE_INSTALL_PREFIX={{prefix}}
            make install

            # stuff expects `Eigen` to be in `include` rather than namespaced
            cd "{{prefix}}"
            mv include/eigen3/* include
            cd include
            rmdir eigen3
            # but work for stuff that expects the namespace too
            ln -s eigen3 .
          test:
            make test

        test:
          dependencies:
            tea.xyz/gx/cc: c99
            freedesktop.org/pkg-config: ^0.29
          env:
            cxxflags: $(pkg-config --cflags eigen3)
          fixture: |
            #include <iostream>
            #include <Eigen/Dense>
            using Eigen::MatrixXd;
            int main()
            {
              MatrixXd m(2,2);
              m(0,0) = 3;
              m(1,0) = 2.5;
              m(0,1) = -1;
              m(1,1) = m(1,0) + m(0,1);
              std::cout << m << std::endl;
            }
          script: |
            mv $FIXTURE test.cpp
            g++ test.cpp ${cxxflags} -o test
            ./test > output.txt
            out=$(./test)
            if test "$out" = $'  3  -1\n2.5 1.5'; then
              echo "PASS"
            else
              echo "FAIL"
            fi



Convert the following ruby formula to yml.

    Here is the ruby formula for the project groonga:


        class Groonga < Formula
          homepage "https://groonga.org/"
          url "https://packages.groonga.org/source/groonga/groonga-13.0.1.tar.gz"
          livecheck do
            url :homepage
            regex(%r{>v?(\d+(?:\.\d+)+)</a> is the latest release}i)
          end
          head do
            url "https://github.com/groonga/groonga.git", branch: "master"
            depends_on "autoconf" => :build
            depends_on "automake" => :build
            depends_on "libtool" => :build
          end
          depends_on "pkg-config" => :build
          depends_on "mecab"
          depends_on "mecab-ipadic"
          depends_on "msgpack"
          depends_on "openssl@1.1"
          depends_on "pcre"
          uses_from_macos "libxcrypt"
          on_linux do
            depends_on "glib"
          end
          link_overwrite "lib/groonga/plugins/normalizers/"
          link_overwrite "share/doc/groonga-normalizer-mysql/"
          link_overwrite "lib/pkgconfig/groonga-normalizer-mysql.pc"
          def install
            args = %w[
              --disable-zeromq
              --disable-apache-arrow
              --with-luajit=no
              --with-ssl
              --with-zlib
              --without-libstemmer
              --with-mecab
            ]
            system "./autogen.sh" if build.head?
            mkdir "builddir" do
              system "../configure", *args, *std_configure_args
              system "make", "install"
            end
            resource("groonga-normalizer-mysql").stage do
              ENV.prepend_path "PATH", bin
              ENV.prepend_path "PKG_CONFIG_PATH", lib/"pkgconfig"
              system "./configure", "--prefix=#{prefix}"
              system "make"
              system "make", "install"
            end
          end
          test do
            IO.popen("#{bin}/groonga -n #{testpath}/test.db", "r+") do |io|
              io.puts("table_create --name TestTable --flags TABLE_HASH_KEY --key_type ShortText")
              sleep 2
              io.puts("shutdown")
              # expected returned result is like this:
              # [[0,1447502555.38667,0.000824928283691406],true]\n
              assert_match(/\[\[0,\d+.\d+,\d+.\d+\],true\]/, io.read)
            end
            IO.popen("#{bin}/groonga -n #{testpath}/test-normalizer-mysql.db", "r+") do |io|
              io.puts "register normalizers/mysql"
              sleep 2
              io.puts("shutdown")
              # expected returned result is like this:
              # [[0,1447502555.38667,0.000824928283691406],true]\n
              assert_match(/\[\[0,\d+.\d+,\d+.\d+\],true\]/, io.read)
            end
          end
        end



    The yml formula for the project groonga is as follows: