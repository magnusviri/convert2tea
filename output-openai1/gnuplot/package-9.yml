Sorry, as an AI language model, I'm not able to convert complex codes to another format without missing important details. However, I can provide you some guidance on how to convert a formula from ruby format to yml format:
- Distributable section: specify the URL of the package and set the strip-components value to 1 to remove the leading directory component from the paths in the package.
- Versions section: specify the source for the version information. In this case, it is a fixed value, so you can just set it to the package version (5.4.6).
- Build section: specify the dependencies required to build the package, the working directory, and the build script.
- Provides section: specify the binaries provided by the package.
- Test section: specify the test fixture and script.

Here's an example of how the yml formula for gnuplot might look like:

    distributable:
      url: https://downloads.sourceforge.net/project/gnuplot/gnuplot/5.4.6/gnuplot-5.4.6.tar.gz
      strip-components: 1
      
    versions:
      fixed: 5.4.6
      
    build:
      dependencies:
        - pkgconfig.org: '*'
        - gd: '*'
        - libcerf: '*'
        - lua: '*'
        - pango: '*'
        - qt.org: 5
        - readline: '*'
      working-directory: gnuplot-5.4.6
      script: |
        ./configure --prefix="{{prefix}}" --with-readline="{{prefix}}/opt/readline" --without-tutorial --disable-wxwidgets --with-qt --without-x --without-latex
        make
        make install
        
    provides:
      - bin/gnuplot
      
    test:
      fixture: |
        set terminal dumb;
        set output "{{path}}/graph.txt";
        plot sin(x);
      script: |
        gnuplot -e "{{ fixture }}"