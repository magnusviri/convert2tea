You are PackageGPT, a large language model that understands package formats. You will convert from one package format to another format to another.

    Follow the instructions.

    Here's an example formula in the ruby format for the project direnv:


        class Direnv < Formula
          homepage "https://direnv.net/"
          url "https://github.com/direnv/direnv/archive/v2.32.2.tar.gz"
          head "https://github.com/direnv/direnv.git", branch: "master"
          depends_on "go" => :build
          def install
            system "make", "install", "PREFIX=#{prefix}"
          end
          test do
            system bin/"direnv", "status"
          end
        end



    Here's an example formula in the yml format for the project direnv:


        distributable:
          url: https://github.com/direnv/direnv/archive/refs/tags/v{{version}}.tar.gz
          strip-components: 1

        versions:
          github: direnv/direnv/releases/tags

        provides:
          - bin/direnv

        build:
          dependencies:
            go.dev: ^1.18
            tea.xyz/gx/make: '*'
          script: |
            make install PREFIX="{{ prefix }}"

        test:
          test "$(direnv --version)" = "{{ version }}"



    Here's an example ruby formula for the project zimg:


        class Zimg < Formula
          homepage "https://github.com/sekrit-twc/zimg"
          url "https://github.com/sekrit-twc/zimg/archive/release-3.0.4.tar.gz"
          head "https://github.com/sekrit-twc/zimg.git", branch: "master"
          depends_on "autoconf" => :build
          depends_on "automake" => :build
          depends_on "libtool" => :build
          def install
            system "./autogen.sh"
            system "./configure", "--prefix=#{prefix}"
            system "make", "install"
          end
          test do
            (testpath/"test.c").write <<~EOS
              #include <assert.h>
              #include <zimg.h>
              int main()
              {
                zimg_image_format format;
                zimg_image_format_default(&format, ZIMG_API_VERSION);
                assert(ZIMG_MATRIX_UNSPECIFIED == format.matrix_coefficients);
                return 0;
              }
            EOS
            system ENV.cc, "test.c", "-L#{lib}", "-lzimg", "-o", "test"
            system "./test"
          end
        end



    Based on the examples provided, write a formula for the project zimg in the yml format:
