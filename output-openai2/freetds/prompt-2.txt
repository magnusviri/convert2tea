bitcoin

class Bitcoin < Formula
  homepage "https://bitcoincore.org/"
  url "https://bitcoincore.org/bin/bitcoin-core-24.0.1/bitcoin-24.0.1.tar.gz"
  head "https://github.com/bitcoin/bitcoin.git", branch: "master"
  livecheck do
    url "https://bitcoincore.org/en/download/"
    regex(/latest version.*?v?(\d+(?:\.\d+)+)/i)
  end
  depends_on "autoconf" => :build
  depends_on "automake" => :build
  depends_on "libtool" => :build
  depends_on "pkg-config" => :build
  # berkeley db should be kept at version 4
  # https://github.com/bitcoin/bitcoin/blob/master/doc/build-osx.md
  # https://github.com/bitcoin/bitcoin/blob/master/doc/build-unix.md
  depends_on "berkeley-db@4"
  depends_on "boost"
  depends_on "libevent"
  depends_on macos: :catalina
  depends_on "miniupnpc"
  depends_on "zeromq"
  uses_from_macos "sqlite"
  on_linux do
    depends_on "util-linux" => :build # for `hexdump`
  end
  fails_with :gcc do
    version "7" # fails with GCC 7.x and earlier
    cause "Requires std::filesystem support"
  end
  def install
    system "./autogen.sh"
    system "./configure", *std_configure_args,
                          "--disable-silent-rules",
                          "--with-boost-libdir=#{Formula["boost"].opt_lib}"
    system "make", "install"
    pkgshare.install "share/rpcauth"
  end
  service do
    run opt_bin/"bitcoind"
  end
  test do
    system "#{bin}/test_bitcoin"
    # Test that we're using the right version of `berkeley-db`.
    port = free_port
    bitcoind = spawn bin/"bitcoind", "-regtest", "-rpcport=#{port}", "-listen=0", "-datadir=#{testpath}"
    sleep 15
    # This command will fail if we have too new a version.
    system bin/"bitcoin-cli", "-regtest", "-datadir=#{testpath}", "-rpcport=#{port}",
                              "createwallet", "test-wallet", "false", "false", "", "false", "false"
  ensure
    Process.kill "TERM", bitcoind
  end
end


distributable:
  url: https://bitcoincore.org/bin/bitcoin-core-{{version}}/bitcoin-{{version}}.tar.gz
  strip-components: 1

versions:
  github: bitcoin/bitcoin
  strip: /^Bitcoin Core /

dependencies:
  oracle.com/berkeley-db: ^18
  boost.org: ^1
  libevent.org: ^2
  zeromq.org: ^4
  sqlite.org: ^3

build:
  dependencies:
    gnu.org/autoconf: ^2
    gnu.org/automake: ^1
    tea.xyz/gx/cc: c99
    tea.xyz/gx/make: '*'
    freedesktop.org/pkg-config: ^0.29
    gnu.org/libtool: ^2
  script: |
    ./autogen.sh
    ./configure $ARGS
    make --jobs {{ hw.concurrency }} install
  env:
    ARGS:
      - --prefix={{prefix}}
      - --disable-debug
      - --disable-tests  # needs: `hexedit`
      - --disable-bench  # fails: linux/aarch64/v24.0.1

provides:
  - bin/bitcoin-cli
  - bin/bitcoin-tx
  - bin/bitcoin-util
  - bin/bitcoin-wallet
  - bin/bitcoind

test:
  bitcoind -version


class Freetds < Formula
  homepage "https://www.freetds.org/"
  stable do
    url "https://www.freetds.org/files/stable/freetds-1.3.18.tar.bz2", using: :homebrew_curl
    # Fix -flat_namespace being used on Big Sur and later.
    patch do
      url "https://raw.githubusercontent.com/Homebrew/formula-patches/03cf8088210822aa2c1ab544ed58ea04c897d9c4/libtool/configure-big_sur.diff"
    end
  end
  livecheck do
    url "https://www.freetds.org/files/stable/"
    regex(/href=.*?freetds[._-]v?(\d+(?:\.\d+)+)\.t/i)
  end
  head do
    url "https://github.com/FreeTDS/freetds.git", branch: "master"
    depends_on "autoconf" => :build
    depends_on "automake" => :build
    depends_on "gettext" => :build
    depends_on "libtool" => :build
  end
  depends_on "pkg-config" => :build
  depends_on "openssl@1.1"
  depends_on "unixodbc"
  uses_from_macos "krb5"
  on_linux do
    depends_on "readline"
  end
  def install
    args = %W[
      --prefix=#{prefix}
      --with-tdsver=7.3
      --mandir=#{man}
      --sysconfdir=#{etc}
      --with-unixodbc=#{Formula["unixodbc"].opt_prefix}
      --with-openssl=#{Formula["openssl@1.1"].opt_prefix}
      --enable-sybase-compat
      --enable-krb5
      --enable-odbc-wide
    ]
    if build.head?
      system "./autogen.sh", *args
    else
      system "./configure", *args
    end
    system "make"
    ENV.deparallelize # Or fails to install on multi-core machines
    system "make", "install"
  end
  test do
    system "#{bin}/tsql", "-C"
  end
end


freetds