aria2

class Aria2 < Formula
  homepage "https://aria2.github.io/"
  url "https://github.com/aria2/aria2/releases/download/release-1.36.0/aria2-1.36.0.tar.xz"
  revision 1
  depends_on "pkg-config" => :build
  depends_on "gettext"
  depends_on "libssh2"
  depends_on "sqlite"
  uses_from_macos "libxml2"
  uses_from_macos "zlib"
  on_linux do
    depends_on "openssl@1.1"
  end
  def install
    ENV.cxx11
    args = %W[
      --disable-dependency-tracking
      --prefix=#{prefix}
      --with-libssh2
      --without-gnutls
      --without-libgmp
      --without-libnettle
      --without-libgcrypt
    ]
    if OS.mac?
      args << "--with-appletls"
      args << "--without-openssl"
    else
      args << "--without-appletls"
      args << "--with-openssl"
    end
    system "./configure", *args
    system "make", "install"
    bash_completion.install "doc/bash_completion/aria2c"
  end
  test do
    system "#{bin}/aria2c", "https://brew.sh/"
    assert_predicate testpath/"index.html", :exist?, "Failed to create index.html!"
  end
end


distributable:
  url: https://github.com/aria2/aria2/releases/download/release-{{ version }}/aria2-{{ version }}.tar.xz
  strip-components: 1

versions:
  github: aria2/aria2
  strip: /^aria2 /

provides:
  - bin/aria2c

dependencies:
  zlib.net: ^1
  openssl.org: ^1
  libexpat.github.io: '*'
  sqlite.org: ^3

build:
  dependencies:
    tea.xyz/gx/cc: c99
    tea.xyz/gx/make: '*'
    gnupg.org/libgcrypt: ^1
    gnupg.org/libgpg-error: ^1
    freedesktop.org/pkg-config: '*'
  script: |
    ./configure $ARGS
    make --jobs {{hw.concurrency}}
    make install
  env:
    ARGS:
      - --prefix="{{prefix}}"
      - --with-openssl
      - --with-libgcrypt

test: |
  aria2c -v
  aria2c https://tea.xyz
  aria2c --seed-time=0 "magnet:?xt=urn:btih:d984f67af9917b214cd8b6048ab5624c7df6a07a&tr=https%3A%2F%2Facademictorrents.com%2Fannounce.php&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce"

class Libaec < Formula
  homepage "https://gitlab.dkrz.de/k202009/libaec"
  url "https://gitlab.dkrz.de/k202009/libaec/-/archive/v1.0.6/libaec-v1.0.6.tar.bz2"
  head "https://gitlab.dkrz.de/k202009/libaec.git", branch: "master"
  depends_on "cmake" => :build
  # These may have been linked by `szip` before keg_only change
  link_overwrite "include/szlib.h"
  link_overwrite "lib/libsz.a"
  link_overwrite "lib/libsz.dylib"
  link_overwrite "lib/libsz.2.dylib"
  link_overwrite "lib/libsz.so"
  link_overwrite "lib/libsz.so.2"
  def install
    mkdir "build" do
      # We run `make test` for libraries
      system "cmake", "..", *std_cmake_args, "-DBUILD_TESTING=ON"
      system "make", "install"
      system "make", "test"
    end
  end
  test do
    system bin/"aec", "-v"
    (testpath/"test.cpp").write <<~EOS
      #include <cassert>
      #include <cstddef>
      #include <cstdlib>
      #include <libaec.h>
      int main() {
        unsigned char * data = (unsigned char *) calloc(1024, sizeof(unsigned char));
        unsigned char * compressed = (unsigned char *) calloc(1024, sizeof(unsigned char));
        for(int i = 0; i < 1024; i++) { data[i] = (unsigned char)(i); }
        struct aec_stream strm;
        strm.bits_per_sample = 16;
        strm.block_size      = 64;
        strm.rsi             = 129;
        strm.flags           = AEC_DATA_PREPROCESS | AEC_DATA_MSB;
        strm.next_in         = data;
        strm.avail_in        = 1024;
        strm.next_out        = compressed;
        strm.avail_out       = 1024;
        assert(aec_encode_init(&strm) == 0);
        assert(aec_encode(&strm, AEC_FLUSH) == 0);
        assert(strm.total_out > 0);
        assert(aec_encode_end(&strm) == 0);
        free(data);
        free(compressed);
        return 0;
      }
    EOS
    system ENV.cc, "test.cpp", "-I#{include}", "-L#{lib}", "-laec", "-o", "test"
    system "./test"
  end
end


libaec