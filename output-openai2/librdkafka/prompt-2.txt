direnv

class Direnv < Formula
  homepage "https://direnv.net/"
  url "https://github.com/direnv/direnv/archive/v2.32.2.tar.gz"
  head "https://github.com/direnv/direnv.git", branch: "master"
  depends_on "go" => :build
  def install
    system "make", "install", "PREFIX=#{prefix}"
  end
  test do
    system bin/"direnv", "status"
  end
end


distributable:
  url: https://github.com/direnv/direnv/archive/refs/tags/v{{version}}.tar.gz
  strip-components: 1

versions:
  github: direnv/direnv/releases/tags

provides:
  - bin/direnv

build:
  dependencies:
    go.dev: ^1.18
    tea.xyz/gx/make: '*'
  script: |
    make install PREFIX="{{ prefix }}"

test:
  test "$(direnv --version)" = "{{ version }}"


class Librdkafka < Formula
  homepage "https://github.com/edenhill/librdkafka"
  url "https://github.com/edenhill/librdkafka/archive/refs/tags/v2.0.2.tar.gz"
  head "https://github.com/edenhill/librdkafka.git", branch: "master"
  livecheck do
    url :stable
    regex(/^v?(\d+(?:\.\d+)+)$/i)
  end
  depends_on "pkg-config" => :build
  depends_on "python@3.11" => :build
  depends_on "lz4"
  depends_on "lzlib"
  depends_on "openssl@1.1"
  depends_on "zstd"
  uses_from_macos "curl"
  uses_from_macos "cyrus-sasl"
  uses_from_macos "zlib"
  def install
    system "./configure", "--prefix=#{prefix}"
    system "make"
    system "make", "install"
  end
  test do
    (testpath/"test.c").write <<~EOS
      #include <librdkafka/rdkafka.h>
      int main (int argc, char **argv)
      {
        int partition = RD_KAFKA_PARTITION_UA; /* random */
        int version = rd_kafka_version();
        return 0;
      }
    EOS
    system ENV.cc, "test.c", "-L#{lib}", "-lrdkafka", "-lz", "-lpthread", "-o", "test"
    system "./test"
  end
end


librdkafka