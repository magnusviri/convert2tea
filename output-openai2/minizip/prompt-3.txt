direnv

class Direnv < Formula
  homepage "https://direnv.net/"
  url "https://github.com/direnv/direnv/archive/v2.32.2.tar.gz"
  head "https://github.com/direnv/direnv.git", branch: "master"
  depends_on "go" => :build
  def install
    system "make", "install", "PREFIX=#{prefix}"
  end
  test do
    system bin/"direnv", "status"
  end
end


distributable:
  url: https://github.com/direnv/direnv/archive/refs/tags/v{{version}}.tar.gz
  strip-components: 1

versions:
  github: direnv/direnv/releases/tags

provides:
  - bin/direnv

build:
  dependencies:
    go.dev: ^1.18
    tea.xyz/gx/make: '*'
  script: |
    make install PREFIX="{{ prefix }}"

test:
  test "$(direnv --version)" = "{{ version }}"


class Minizip < Formula
  homepage "https://www.winimage.com/zLibDll/minizip.html"
  url "https://zlib.net/zlib-1.2.13.tar.gz"
  mirror "https://downloads.sourceforge.net/project/libpng/zlib/1.2.13/zlib-1.2.13.tar.gz"
  livecheck do
    formula "zlib"
  end
  depends_on "autoconf" => :build
  depends_on "automake" => :build
  depends_on "libtool" => :build
  uses_from_macos "zlib"
  conflicts_with "minizip-ng",
    because: "both install a `libminizip.a` library"
  def install
    system "./configure", "--prefix=#{prefix}"
    system "make"
    cd "contrib/minizip" do
      if OS.mac?
        # edits to statically link to libz.a
        inreplace "Makefile.am" do |s|
          s.sub! "-L$(zlib_top_builddir)", "$(zlib_top_builddir)/libz.a"
          s.sub! "-version-info 1:0:0 -lz", "-version-info 1:0:0"
          s.sub! "libminizip.la -lz", "libminizip.la"
        end
      end
      system "autoreconf", "-fi"
      system "./configure", "--prefix=#{prefix}"
      system "make", "install"
    end
  end
  def caveats
    <<~EOS
      Minizip headers installed in 'minizip' subdirectory, since they conflict
      with the venerable 'unzip' library.
    EOS
  end
end


minizip