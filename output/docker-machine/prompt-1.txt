direnv

class Direnv < Formula
  homepage "https://direnv.net/"
  url "https://github.com/direnv/direnv/archive/v2.32.2.tar.gz"
  head "https://github.com/direnv/direnv.git", branch: "master"
  depends_on "go" => :build
  def install
    system "make", "install", "PREFIX=#{prefix}"
  end
  test do
    system bin/"direnv", "status"
  end
end


distributable:
  url: https://github.com/direnv/direnv/archive/refs/tags/v{{version}}.tar.gz
  strip-components: 1

versions:
  github: direnv/direnv/releases/tags

provides:
  - bin/direnv

build:
  dependencies:
    go.dev: ^1.18
    tea.xyz/gx/make: '*'
  script: |
    make install PREFIX="{{ prefix }}"

test:
  test "$(direnv --version)" = "{{ version }}"


class DockerMachine < Formula
  homepage "https://docs.docker.com/machine"
  url "https://gitlab.com/gitlab-org/ci-cd/docker-machine.git",
      tag:      "v0.16.2-gitlab.20",
      revision: "9e9d6baf7eda8b6569f92e777ae7f496599fb297"
  version "0.16.2-gitlab.20"
  head "https://gitlab.com/gitlab-org/ci-cd/docker-machine.git", branch: "master"
  # Commented out while this formula still has dependents.
  # deprecate! date: "2021-09-30", because: :repo_archived
  depends_on "automake" => :build
  depends_on "go" => :build
  conflicts_with "docker-machine-completion", because: "docker-machine already includes completion scripts"
  def install
    ENV["GOPATH"] = buildpath
    ENV["GO111MODULE"] = "auto"
    (buildpath/"src/github.com/docker/machine").install buildpath.children
    cd "src/github.com/docker/machine" do
      system "make", "build"
      bin.install Dir["bin/*"]
      bash_completion.install Dir["contrib/completion/bash/*.bash"]
      zsh_completion.install "contrib/completion/zsh/_docker-machine"
      prefix.install_metafiles
    end
  end
  service do
    run [opt_bin/"docker-machine", "start", "default"]
    environment_variables PATH: std_service_path_env
    run_type :immediate
    working_dir HOMEBREW_PREFIX
  end
  test do
    assert_match version.to_s, shell_output(bin/"docker-machine --version")
  end
end


docker-machine