doxygen

class Doxygen < Formula
  homepage "https://www.doxygen.nl/"
  url "https://doxygen.nl/files/doxygen-1.9.6.src.tar.gz"
  mirror "https://downloads.sourceforge.net/project/doxygen/rel-1.9.6/doxygen-1.9.6.src.tar.gz"
  head "https://github.com/doxygen/doxygen.git", branch: "master"
  livecheck do
    url "https://www.doxygen.nl/download.html"
    regex(/href=.*?doxygen[._-]v?(\d+(?:\.\d+)+)[._-]src\.t/i)
  end
  depends_on "bison" => :build
  depends_on "cmake" => :build
  uses_from_macos "flex" => :build, since: :big_sur
  uses_from_macos "python" => :build
  fails_with :gcc do
    version "6"
    cause "Need gcc>=7.2. See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=66297"
  end
  def install
    system "cmake", "-S", ".", "-B", "build",
                    "-DPYTHON_EXECUTABLE=#{which("python3") || which("python")}",
                    *std_cmake_args
    system "cmake", "--build", "build"
    system "cmake", "--install", "build"
    system "cmake", "-S", ".", "-B", "build", "-Dbuild_doc=1", *std_cmake_args
    man1.install buildpath.glob("build/man/*.1")
  end
  test do
    system bin/"doxygen", "-g"
    system bin/"doxygen", "Doxyfile"
  end
end



distributable:
   url: https://github.com/doxygen/doxygen/archive/refs/tags/Release_{{version.major}}_{{version.minor}}_{{version.patch}}.tar.gz
   strip-components: 1

versions:
  - 1.9.6 # FIXME: the versions are "Release_1_9_6" but no idea how I can parse this without regex

build:
  dependencies:
    tea.xyz/gx/cc: c99
    tea.xyz/gx/make: '*'
    gnu.org/bison: ^3
    cmake.org: ^3
    github.com/westes/flex: 2
    python.org: ^3
  working-directory: build
  script: |
    cmake $ARGS -G "Unix Makefiles" ..
    make --jobs {{ hw.concurrency }} 
    make install
  env:
    ARGS:
      - -DCMAKE_INSTALL_PREFIX="{{prefix}}"
      - -DCMAKE_BUILD_TYPE=Release
    

provides:
  - bin/doxygen

test:
  script: |
    doxygen -g
    doxygen Doxyfile


class Emacs < Formula
  homepage "https://www.gnu.org/software/emacs/"
  url "https://ftp.gnu.org/gnu/emacs/emacs-28.2.tar.xz"
  mirror "https://ftpmirror.gnu.org/emacs/emacs-28.2.tar.xz"
  head do
    url "https://github.com/emacs-mirror/emacs.git", branch: "master"
    depends_on "autoconf" => :build
    depends_on "gnu-sed" => :build
    depends_on "texinfo" => :build
  end
  depends_on "pkg-config" => :build
  depends_on "gnutls"
  depends_on "jansson"
  uses_from_macos "libxml2"
  uses_from_macos "ncurses"
  on_linux do
    depends_on "jpeg-turbo"
  end
  def install
    # Mojave uses the Catalina SDK which causes issues like
    # https://github.com/Homebrew/homebrew-core/issues/46393
    # https://github.com/Homebrew/homebrew-core/pull/70421
    ENV["ac_cv_func_aligned_alloc"] = "no" if MacOS.version == :mojave
    args = %W[
      --disable-silent-rules
      --enable-locallisppath=#{HOMEBREW_PREFIX}/share/emacs/site-lisp
      --infodir=#{info}/emacs
      --prefix=#{prefix}
      --with-gnutls
      --without-x
      --with-xml2
      --without-dbus
      --with-modules
      --without-ns
      --without-imagemagick
      --without-selinux
    ]
    if build.head?
      ENV.prepend_path "PATH", Formula["gnu-sed"].opt_libexec/"gnubin"
      system "./autogen.sh"
    end
    File.write "lisp/site-load.el", <<~EOS
      (setq exec-path (delete nil
        (mapcar
          (lambda (elt)
            (unless (string-match-p "Homebrew/shims" elt) elt))
          exec-path)))
    EOS
    system "./configure", *args
    system "make"
    system "make", "install"
    # Follow MacPorts and don't install ctags from Emacs. This allows Vim
    # and Emacs and ctags to play together without violence.
    (bin/"ctags").unlink
    (man1/"ctags.1.gz").unlink
  end
  service do
    run [opt_bin/"emacs", "--fg-daemon"]
    keep_alive true
  end
  test do
    assert_equal "4", shell_output("#{bin}/emacs --batch --eval=\"(print (+ 2 2))\"").strip
  end
end


emacs