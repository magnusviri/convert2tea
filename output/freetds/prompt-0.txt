jansson

class Jansson < Formula
  homepage "https://digip.org/jansson/"
  url "https://github.com/akheron/jansson/releases/download/v2.14/jansson-2.14.tar.gz"
  def install
    system "./configure", *std_configure_args
    system "make", "install"
  end
  test do
    (testpath/"test.c").write <<~EOS
      #include <jansson.h>
      #include <assert.h>
      int main()
      {
        json_t *json;
        json_error_t error;
        json = json_loads("\\"foo\\"", JSON_DECODE_ANY, &error);
        assert(json && json_is_string(json));
        json_decref(json);
        return 0;
      }
    EOS
    system ENV.cc, "test.c", "-L#{lib}", "-ljansson", "-o", "test"
    system "./test"
  end
end


distributable:
  url: https://github.com/akheron/jansson/releases/download/v{{ version.raw }}/jansson-{{ version.raw }}.tar.gz
  strip-components: 1

versions:
  github: akheron/jansson/tags
  strip: /^v/

build:
  dependencies:
    linux:
      gnu.org/gcc: '*'
    darwin:
      tea.xyz/gx/cc: c99
    tea.xyz/gx/make: '*'
  script: |
    ./configure --prefix="{{prefix}}"
    make --jobs {{ hw.concurrency }} install

test:
  dependencies:
    tea.xyz/gx/cc: c99
  script: |
    cc fixture.c -ljansson
    ./a.out

class Freetds < Formula
  homepage "https://www.freetds.org/"
  stable do
    url "https://www.freetds.org/files/stable/freetds-1.3.18.tar.bz2", using: :homebrew_curl
    # Fix -flat_namespace being used on Big Sur and later.
    patch do
      url "https://raw.githubusercontent.com/Homebrew/formula-patches/03cf8088210822aa2c1ab544ed58ea04c897d9c4/libtool/configure-big_sur.diff"
    end
  end
  livecheck do
    url "https://www.freetds.org/files/stable/"
    regex(/href=.*?freetds[._-]v?(\d+(?:\.\d+)+)\.t/i)
  end
  head do
    url "https://github.com/FreeTDS/freetds.git", branch: "master"
    depends_on "autoconf" => :build
    depends_on "automake" => :build
    depends_on "gettext" => :build
    depends_on "libtool" => :build
  end
  depends_on "pkg-config" => :build
  depends_on "openssl@1.1"
  depends_on "unixodbc"
  uses_from_macos "krb5"
  on_linux do
    depends_on "readline"
  end
  def install
    args = %W[
      --prefix=#{prefix}
      --with-tdsver=7.3
      --mandir=#{man}
      --sysconfdir=#{etc}
      --with-unixodbc=#{Formula["unixodbc"].opt_prefix}
      --with-openssl=#{Formula["openssl@1.1"].opt_prefix}
      --enable-sybase-compat
      --enable-krb5
      --enable-odbc-wide
    ]
    if build.head?
      system "./autogen.sh", *args
    else
      system "./configure", *args
    end
    system "make"
    ENV.deparallelize # Or fails to install on multi-core machines
    system "make", "install"
  end
  test do
    system "#{bin}/tsql", "-C"
  end
end


freetds