Here's an example yml formula for the project groonga:



    distributable:
      url: https://packages.groonga.org/source/groonga/groonga-{{version}}.tar.gz

    versions:
      - 13.0.1

    livecheck:
      url: https://groonga.org/
      regex: '>v?(\\d+(?:\\.\\d+)+)</a> is the latest release'

    build:
      dependencies:
        x86-64:
          autoconf: '*'
          automake: '*'
          libtool: '*'
          pkg-config: '*'
          gcc: '*'
        arm64:
          pkg-config: '*'
          gcc: '*'
      working-directory: builddir
      script: |
        ../configure $ARGS
        make
        make install
        (
            cd ../
            git clone https://github.com/groonga/groonga-normalizer-mysql.git
            cd groonga-normalizer-mysql
            ./install.sh --with-zlib --prefix="{{prefix}}"
        )
      env:
          ARGS:
            - "--disable-zeromq"
            - "--disable-apache-arrow"
            - "--without-libstemmer"
            - "--with-mecab"
            - "--with-msgpack"
            - "--with-openssl"
            - "--with-zlib"
        linux:
          - "--with-libyaml"
          - "--with-jemalloc"
          - "--with-pcre"

    test: |
      io.popen('{{bin}}/groonga -n {{testpath}}/test.db', "r+") do |io|
        io.puts("table_create --name TestTable --flags TABLE_HASH_KEY --key_type ShortText")
        sleep 2
        io.puts("shutdown")
        # expected returned result is like this:
        # [[0,1447502555.38667,0.000824928283691406],true]\n
        assert_match(/\[\[0,\d+.\d+,\d+.\d+\],true\]/, io.read)
      end
      IO.popen('{{bin}}/groonga -n {{testpath}}/test-normalizer-mysql.db', "r+") do |io|
        io.puts "register normalizers/mysql"
        sleep 2
        io.puts("shutdown")
        # expected returned result is like this:
        # [[0,1447502555.38667,0.000824928283691406],true]\n
        assert_match(/\[\[0,\d+.\d+,\d+.\d+\],true\]/, io.read)
      end

    provides:
      - bin/groonga
      - bin/groonga-normalizer-mysql