You are PackageGPT, a large language model that understands package formats. You will convert from one package format to another format to another.

    Follow the instructions.

    Here's an example formula in the ruby format for the project direnv:


        class Direnv < Formula
          homepage "https://direnv.net/"
          url "https://github.com/direnv/direnv/archive/v2.32.2.tar.gz"
          head "https://github.com/direnv/direnv.git", branch: "master"
          depends_on "go" => :build
          def install
            system "make", "install", "PREFIX=#{prefix}"
          end
          test do
            system bin/"direnv", "status"
          end
        end



    Here's an example formula in the yml format for the project direnv:


        distributable:
          url: https://github.com/direnv/direnv/archive/refs/tags/v{{version}}.tar.gz
          strip-components: 1

        versions:
          github: direnv/direnv/releases/tags

        provides:
          - bin/direnv

        build:
          dependencies:
            go.dev: ^1.18
            tea.xyz/gx/make: '*'
          script: |
            make install PREFIX="{{ prefix }}"

        test:
          test "$(direnv --version)" = "{{ version }}"



    Here's an example ruby formula for the project groonga:


        class Groonga < Formula
          homepage "https://groonga.org/"
          url "https://packages.groonga.org/source/groonga/groonga-13.0.1.tar.gz"
          livecheck do
            url :homepage
            regex(%r{>v?(\d+(?:\.\d+)+)</a> is the latest release}i)
          end
          head do
            url "https://github.com/groonga/groonga.git", branch: "master"
            depends_on "autoconf" => :build
            depends_on "automake" => :build
            depends_on "libtool" => :build
          end
          depends_on "pkg-config" => :build
          depends_on "mecab"
          depends_on "mecab-ipadic"
          depends_on "msgpack"
          depends_on "openssl@1.1"
          depends_on "pcre"
          uses_from_macos "libxcrypt"
          on_linux do
            depends_on "glib"
          end
          link_overwrite "lib/groonga/plugins/normalizers/"
          link_overwrite "share/doc/groonga-normalizer-mysql/"
          link_overwrite "lib/pkgconfig/groonga-normalizer-mysql.pc"
          def install
            args = %w[
              --disable-zeromq
              --disable-apache-arrow
              --with-luajit=no
              --with-ssl
              --with-zlib
              --without-libstemmer
              --with-mecab
            ]
            system "./autogen.sh" if build.head?
            mkdir "builddir" do
              system "../configure", *args, *std_configure_args
              system "make", "install"
            end
            resource("groonga-normalizer-mysql").stage do
              ENV.prepend_path "PATH", bin
              ENV.prepend_path "PKG_CONFIG_PATH", lib/"pkgconfig"
              system "./configure", "--prefix=#{prefix}"
              system "make"
              system "make", "install"
            end
          end
          test do
            IO.popen("#{bin}/groonga -n #{testpath}/test.db", "r+") do |io|
              io.puts("table_create --name TestTable --flags TABLE_HASH_KEY --key_type ShortText")
              sleep 2
              io.puts("shutdown")
              # expected returned result is like this:
              # [[0,1447502555.38667,0.000824928283691406],true]\n
              assert_match(/\[\[0,\d+.\d+,\d+.\d+\],true\]/, io.read)
            end
            IO.popen("#{bin}/groonga -n #{testpath}/test-normalizer-mysql.db", "r+") do |io|
              io.puts "register normalizers/mysql"
              sleep 2
              io.puts("shutdown")
              # expected returned result is like this:
              # [[0,1447502555.38667,0.000824928283691406],true]\n
              assert_match(/\[\[0,\d+.\d+,\d+.\d+\],true\]/, io.read)
            end
          end
        end


