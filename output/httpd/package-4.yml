# This is a rough conversion based on the Ruby formula provided
# It may require additional work to fully convert and test
# It is recommended to consult the official documentation for conversion guidelines and best practices

distributable:
  url: https://dlcdn.apache.org/httpd/httpd-2.4.56.tar.bz2
  mirror: https://downloads.apache.org/httpd/httpd-2.4.56.tar.bz2
  strip-components: 1
  # assumes version is included in the filename

versions:
  # assumes github releases follow a consistent naming convention
  github: apache/httpd/releases/tags

build:
  dependencies:
    - apr
    - apr-util
    - brotli
    - libnghttp2
    - openssl@1.1
    - pcre2
    - libxml2 # used from macOS
    - zlib # used from macOS
  working-directory: build
  script: |
    # Fix prefix references in favor of opt_prefix references
    sed -i.bak 's/#@@ServerRoot@@#$(prefix)/#@@ServerRoot@@##{opt_prefix}/' Makefile.in
    sed -i.bak 's/@exp_iconsdir@/#{opt_pkgshare}\/icons/' docs/conf/extra/httpd-autoindex.conf.in
    sed -i.bak 's/@exp_errordir@/#{opt_pkgshare}\/error/' docs/conf/extra/httpd-multilang-errordoc.conf.in
    sed -i.bak 's/User daemon/User _www/' docs/conf/httpd.conf.in

    # Use Slackware-FHS layout
    sed -i.bak 's|${datadir}/htdocs|${datadir}|' config.layout
    sed -i.bak 's|${htdocsdir}/manual|#{pkgshare}/manual|' config.layout
    sed -i.bak 's|${datadir}/error|#{pkgshare}/error|' config.layout
    sed -i.bak 's|${datadir}/icons|#{pkgshare}/icons|' config.layout

    # Set library paths
    libxml2=$(xcrun --show-sdk-path)/usr # macOS SDK path
    zlib=$(xcrun --show-sdk-path)/usr # macOS SDK path

    # Configure and build
    ./configure --enable-layout=Slackware-FHS \
                --prefix=#{prefix} \
                --sbindir=#{bin} \
                --mandir=#{man} \
                --sysconfdir=#{etc}/httpd \
                --datadir=#{var}/www \
                --localstatedir=#{var} \
                --enable-mpms-shared=all \
                --enable-mods-shared=all \
                --enable-authnz-fcgi \
                --enable-cgi \
                --enable-pie \
                --enable-suexec \
                --with-suexec-bin=#{opt_bin}/suexec \
                --with-suexec-caller=_www \
                --with-port=8080 \
                --with-sslport=8443 \
                --with-apr=#{Formula["apr"].opt_prefix} \
                --with-apr-util=#{Formula["apr-util"].opt_prefix} \
                --with-brotli=#{Formula["brotli"].opt_prefix} \
                --with-libxml2=#{libxml2} \
                --with-mpm=prefork \
                --with-nghttp2=#{Formula["libnghttp2"].opt_prefix} \
                --with-ssl=#{Formula["openssl@1.1"].opt_prefix} \
                --with-pcre=#{Formula["pcre2"].opt_prefix}/bin/pcre2-config \
                --with-z=#{zlib} \
                --disable-lua \
                --disable-luajit
    make
    make install
    # Install suexec separately
    install support/suexec #{bin}
  env:
    # Pass CMake arguments as environment variables
    ARGS:
      - -DCMAKE_INSTALL_PREFIX=#{prefix}
      - -DCMAKE_BUILD_TYPE=Release
      - -DBUILD_ICU_EXTENSION=1
      - -DBUILD_JSON_EXTENSION=1
      - -DBUILD_PARQUET_EXTENSION=1

provides:
  - bin/apachectl
  - bin/apxs

test:
  script: |
    out="$(duckdb < $FIXTURE)"
    exp=$(cat <<EOS
    ┌─────────────┐
    │ avg("temp") │
    │   double    │
    ├─────────────┤
    │        45.0 │
    └─────────────┘
    EOS)

    test "$out" = "$exp"

    if [[ "$(duckdb --version)" != "v{{version}}"* ]]; then
      echo "invalid version" >&2
      exit 1
    fi
  # TODO: Add a proper test
