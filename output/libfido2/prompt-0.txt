cpanminus

class Cpanminus < Formula
  homepage "https://github.com/miyagawa/cpanminus"
  # Don't use git tags, their naming is misleading
  url "https://cpan.metacpan.org/authors/id/M/MI/MIYAGAWA/App-cpanminus-1.7046.tar.gz"
  license any_of: ["Artistic-1.0-Perl", "GPL-1.0-or-later"]
  version_scheme 1
  head "https://github.com/miyagawa/cpanminus.git", branch: "devel"
  uses_from_macos "perl"
  def install
    cd "App-cpanminus" if build.head?
    system "perl", "Makefile.PL", "INSTALL_BASE=#{prefix}",
                                  "INSTALLSITEMAN1DIR=#{man1}",
                                  "INSTALLSITEMAN3DIR=#{man3}"
    system "make", "install"
  end
  def post_install
    cpanm_lines = (bin/"cpanm").read.lines
    return if cpanm_lines.first.match?(%r{^#!/usr/bin/env perl})
    ohai "Adding `/usr/bin/env perl` shebang to `cpanm`..."
    cpanm_lines.unshift "#!/usr/bin/env perl\n"
    (bin/"cpanm").atomic_write cpanm_lines.join
  end
  test do
    assert_match "cpan.metacpan.org", stable.url, "Don't use git tags, their naming is misleading"
    system "#{bin}/cpanm", "--local-lib=#{testpath}/perl5", "Test::More"
  end
end


distributable:
  url: https://cpan.metacpan.org/authors/id/M/MI/MIYAGAWA/App-cpanminus-{{version.raw}}.tar.gz
  strip-components: 1

versions:
  github: miyagawa/cpanminus/tags
  ignore:
    - /^1.9/   # invalid versions in the tags for some reason
    - /^1.79/  # ^^
    - /^1.71/  # ^^ like wtf?

dependencies:
  perl.org: '*'

companions:
  tea.xyz/gx/make: '*'

provides:
  - bin/cpanm

build:
  dependencies:
    tea.xyz/gx/make: '*'
  script: |
    perl Makefile.PL INSTALL_BASE={{prefix}}
    make install

    fix-shebangs.ts {{prefix}}/bin/cpanm

test:
  dependencies:
    tea.xyz/gx/make: '*'
  script:
    cpanm --verbose --local-lib=./out Test::More


class Libfido2 < Formula
  homepage "https://developers.yubico.com/libfido2/"
  url "https://github.com/Yubico/libfido2/archive/1.13.0.tar.gz"
  depends_on "cmake" => :build
  depends_on "mandoc" => :build
  depends_on "pkg-config" => :build
  depends_on "libcbor"
  depends_on "openssl@1.1"
  on_linux do
    depends_on "systemd" # for libudev
  end
  def install
    args = std_cmake_args
    args << "-DUDEV_RULES_DIR=#{lib}/udev/rules.d" if OS.linux?
    mkdir "build" do
      system "cmake", "..", *args
      system "make"
      system "make", "man_symlink_html"
      system "make", "man_symlink"
      system "make", "install"
    end
  end
  test do
    (testpath/"test.c").write <<-EOF
    #include <stddef.h>
    #include <stdio.h>
    #include <fido.h>
    int main(void) {
      fido_init(FIDO_DEBUG);
      // Attempt to enumerate up to five FIDO/U2F devices. Five is an arbitrary number.
      size_t max_devices = 5;
      fido_dev_info_t *devlist;
      if ((devlist = fido_dev_info_new(max_devices)) == NULL)
        return 1;
      size_t found_devices = 0;
      int error;
      if ((error = fido_dev_info_manifest(devlist, max_devices, &found_devices)) == FIDO_OK)
        printf("FIDO/U2F devices found: %s\\n", found_devices ? "Some" : "None");
      fido_dev_info_free(&devlist, max_devices);
    }
    EOF
    system ENV.cc, "test.c", "-I#{include}", "-I#{Formula["openssl@1.1"].include}", "-o", "test",
                   "-L#{lib}", "-lfido2"
    system "./test"
  end
end


libfido2