direnv

class Direnv < Formula
  homepage "https://direnv.net/"
  url "https://github.com/direnv/direnv/archive/v2.32.2.tar.gz"
  head "https://github.com/direnv/direnv.git", branch: "master"
  depends_on "go" => :build
  def install
    system "make", "install", "PREFIX=#{prefix}"
  end
  test do
    system bin/"direnv", "status"
  end
end


distributable:
  url: https://github.com/direnv/direnv/archive/refs/tags/v{{version}}.tar.gz
  strip-components: 1

versions:
  github: direnv/direnv/releases/tags

provides:
  - bin/direnv

build:
  dependencies:
    go.dev: ^1.18
    tea.xyz/gx/make: '*'
  script: |
    make install PREFIX="{{ prefix }}"

test:
  test "$(direnv --version)" = "{{ version }}"


class Libmatio < Formula
  homepage "https://matio.sourceforge.io/"
  url "https://downloads.sourceforge.net/project/matio/matio/1.5.23/matio-1.5.23.tar.gz"
  depends_on "hdf5"
  def install
    args = %W[
      --prefix=#{prefix}
      --enable-extended-sparse=yes
      --enable-mat73=yes
      --with-hdf5=#{Formula["hdf5"].opt_prefix}
      --with-zlib=/usr
    ]
    system "./configure", *args
    system "make", "install"
  end
  test do
    testpath.install resource("homebrew-test_mat_file")
    (testpath/"mat.c").write <<~EOS
      #include <stdlib.h>
      #include <matio.h>
      size_t dims[2] = {5, 5};
      double data[25] = {0.0, };
      mat_t *mat;
      matvar_t *matvar;
      int main(int argc, char **argv) {
        if (!(mat = Mat_Open(argv[1], MAT_ACC_RDONLY)))
          abort();
        Mat_Close(mat);
        mat = Mat_CreateVer("test_writenan.mat", NULL, MAT_FT_DEFAULT);
        if (mat) {
          matvar = Mat_VarCreate("foo", MAT_C_DOUBLE, MAT_T_DOUBLE, 2,
                                 dims, data, MAT_F_DONT_COPY_DATA);
          Mat_VarWrite(mat, matvar, MAT_COMPRESSION_NONE);
          Mat_VarFree(matvar);
          Mat_Close(mat);
        } else {
          abort();
        }
        mat = Mat_CreateVer("foo", NULL, MAT_FT_MAT73);
        return EXIT_SUCCESS;
      }
    EOS
    system ENV.cc, "mat.c", "-o", "mat", "-I#{include}", "-L#{lib}", "-lmatio"
    system "./mat", "poc_data.mat.sfx"
  end
end


libmatio