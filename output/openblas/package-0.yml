The yml formula for the project openblas is:

    distributable:
      url: https://github.com/xianyi/OpenBLAS/archive/v{{version.marketing}}.tar.gz
      strip-components: 1

    versions:
      - 0.3.22

    dependencies:
      gcc: '*'

    build:
      dependencies:
        tea.xyz/gx/cc: c99
        tea.xyz/gx/make: '*'
      script: |
        make CC={{cc}} FC=gfortran libs netlib shared \
          MACOSX_DEPLOYMENT_TARGET={{os_version}} \
          DYNAMIC_ARCH=1 USE_OPENMP=1 NUM_THREADS=56 \
          TARGET={{oldest_cpu}}

    provides:
      - lib/libblas.dylib
      - lib/liblapack.dylib

    test:
      script: |
        printf '#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include "cblas.h"\nint main(void) {\n int i;\n  double A[6] = {1.0, 2.0, 1.0, -3.0, 4.0, -1.0};\n  double B[6] = {1.0, 2.0, 1.0, -3.0, 4.0, -1.0};\n  double C[9] = {.5, .5, .5, .5, .5, .5, .5, .5, .5};\n  cblas_dgemm(CblasColMajor, CblasNoTrans, CblasTrans, 3, 3, 2, 1, A, 3, B, 3, 2, C, 3);\n  for (i = 0; i < 9; i++)\n    printf("%%lf ", C[i]);\n  printf("\\n");\n  if (fabs(C[0]-11) > 1.e-5) abort();\n  if (fabs(C[4]-21) > 1.e-5) abort();\n  return 0;\n}' > test.c
        cc test.c -I{{include}} -L{{lib}} -lopenblas -o test
        ./test