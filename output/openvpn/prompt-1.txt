You are PackageGPT, a large language model that understands package formats. You will convert from one package format to another format to another.

    Follow the instructions.

    Here's an example formula in the ruby format for the project jansson:


        class Jansson < Formula
          homepage "https://digip.org/jansson/"
          url "https://github.com/akheron/jansson/releases/download/v2.14/jansson-2.14.tar.gz"
          def install
            system "./configure", *std_configure_args
            system "make", "install"
          end
          test do
            (testpath/"test.c").write <<~EOS
              #include <jansson.h>
              #include <assert.h>
              int main()
              {
                json_t *json;
                json_error_t error;
                json = json_loads("\\"foo\\"", JSON_DECODE_ANY, &error);
                assert(json && json_is_string(json));
                json_decref(json);
                return 0;
              }
            EOS
            system ENV.cc, "test.c", "-L#{lib}", "-ljansson", "-o", "test"
            system "./test"
          end
        end



    Here's an example formula in the yml format for the project jansson:


        distributable:
          url: https://github.com/akheron/jansson/releases/download/v{{ version.raw }}/jansson-{{ version.raw }}.tar.gz
          strip-components: 1

        versions:
          github: akheron/jansson/tags
          strip: /^v/

        build:
          dependencies:
            linux:
              gnu.org/gcc: '*'
            darwin:
              tea.xyz/gx/cc: c99
            tea.xyz/gx/make: '*'
          script: |
            ./configure --prefix="{{prefix}}"
            make --jobs {{ hw.concurrency }} install

        test:
          dependencies:
            tea.xyz/gx/cc: c99
          script: |
            cc fixture.c -ljansson
            ./a.out


    Here's an example ruby formula for the project openvpn:


        class Openvpn < Formula
          homepage "https://openvpn.net/community/"
          url "https://swupdate.openvpn.org/community/releases/openvpn-2.6.2.tar.gz"
          mirror "https://build.openvpn.net/downloads/releases/openvpn-2.6.2.tar.gz"
          livecheck do
            url "https://openvpn.net/community-downloads/"
            regex(/href=.*?openvpn[._-]v?(\d+(?:\.\d+)+)\.t/i)
          end
          depends_on "pkg-config" => :build
          depends_on "lz4"
          depends_on "lzo"
          depends_on "openssl@3"
          depends_on "pkcs11-helper"
          on_linux do
            depends_on "libcap-ng"
            depends_on "libnl"
            depends_on "linux-pam"
            depends_on "net-tools"
          end
          def install
            system "./configure", "--disable-debug",
                                  "--disable-dependency-tracking",
                                  "--disable-silent-rules",
                                  "--with-crypto-library=openssl",
                                  "--enable-pkcs11",
                                  "--prefix=#{prefix}"
            inreplace "sample/sample-plugins/Makefile" do |s|
              if OS.mac?
                s.gsub! Superenv.shims_path/"pkg-config", Formula["pkg-config"].opt_bin/"pkg-config"
              else
                s.gsub! Superenv.shims_path/"ld", "ld"
              end
            end
            system "make", "install"
            inreplace "sample/sample-config-files/openvpn-startup.sh",
                      "/etc/openvpn", etc/"openvpn"
            (doc/"samples").install Dir["sample/sample-*"]
            (etc/"openvpn").install doc/"samples/sample-config-files/client.conf"
            (etc/"openvpn").install doc/"samples/sample-config-files/server.conf"
            # We don't use mbedtls, so this file is unnecessary & somewhat confusing.
            rm doc/"README.mbedtls"
          end
          def post_install
            (var/"run/openvpn").mkpath
          end
          service do
            run [opt_sbin/"openvpn", "--config", etc/"openvpn/openvpn.conf"]
            keep_alive true
            require_root true
            working_dir etc/"openvpn"
          end
          test do
            system sbin/"openvpn", "--show-ciphers"
          end
        end



    Based on the examples provided, write a formula for the project openvpn in the yml format:
