You are PackageGPT, a large language model that understands package formats. You will convert from one package format to another format to another.

    Follow the instructions.

    Here's an example formula in the ruby format for the project qrencode:


        class Qrencode < Formula
          homepage "https://fukuchi.org/works/qrencode/index.html.en"
          stable do
            url "https://fukuchi.org/works/qrencode/qrencode-4.1.1.tar.gz"
            # Fix -flat_namespace being used on Big Sur and later.
            patch do
              url "https://raw.githubusercontent.com/Homebrew/formula-patches/03cf8088210822aa2c1ab544ed58ea04c897d9c4/libtool/configure-big_sur.diff"
            end
          end
          livecheck do
            url "https://fukuchi.org/works/qrencode/"
            regex(/href=.*?qrencode[._-]v?(\d+(?:\.\d+)+)\.t/i)
          end
          head do
            url "https://github.com/fukuchi/libqrencode.git", branch: "master"
            depends_on "autoconf" => :build
            depends_on "automake" => :build
            depends_on "libtool" => :build
          end
          depends_on "pkg-config" => :build
          depends_on "libpng"
          def install
            system "./autogen.sh" if build.head?
            system "./configure", "--disable-dependency-tracking",
                                  "--prefix=#{prefix}"
            system "make"
            system "make", "install"
          end
          test do
            system "#{bin}/qrencode", "123456789", "-o", "test.png"
          end
        end



    Here's an example formula in the yml format for the project qrencode:


        distributable:
          url: https://github.com/fukuchi/libqrencode/archive/refs/tags/v{{version}}.tar.gz
          strip-components: 1

        versions:
          github: fukuchi/libqrencode/tags
          strip: /v/

        provides:
          - bin/qrencode

        dependencies:
          libpng.org: '*'

        build:
          dependencies:
            tea.xyz/gx/cc: c99
            tea.xyz/gx/make: '*'
            gnu.org/autoconf: '*'
            gnu.org/automake: '*'
            gnu.org/coreutils: '*'
            gnu.org/libtool: '*'
            freedesktop.org/pkg-config: '*'
          script: |
            ./autogen.sh
            ./configure $ARGS
            echo '#define VERSION "{{version}}"' >> config.h
            make install
          env:
            ARGS:
              - --prefix={{prefix}}
            CFLAGS: $(pkg-config --cflags libpng)
            LDFLAGS: $(pkg-config --libs libpng)

        test:
          dependencies:
            imagemagick.org: '*'
          script: |
            qrencode 123456789 -o test.png
            test "$(identify test.png | rev | cut -d ' ' -f3-| rev)" = "test.png PNG 87x87 87x87+0+0 8-bit sRGB 293B"



    Here's an example ruby formula for the project ronn:


        class Ronn < Formula
          homepage "https://rtomayko.github.io/ronn/"
          url "https://github.com/rtomayko/ronn/archive/0.7.3.tar.gz"
          revision 2
          livecheck do
            url :stable
            regex(/^v?(\d+(?:\.\d+)+)$/i)
          end
          depends_on "groff" => :test
          uses_from_macos "ruby"
          on_linux do
            depends_on "util-linux" => :test # for `col`
          end
          def install
            ENV["GEM_HOME"] = libexec
            system "gem", "build", "ronn.gemspec"
            system "gem", "install", "ronn-#{version}.gem"
            bin.install libexec/"bin/ronn"
            bin.env_script_all_files(libexec/"bin", GEM_HOME: ENV["GEM_HOME"])
            man1.install "man/ronn.1"
            man7.install "man/ronn-format.7"
          end
          test do
            (testpath/"test.ronn").write <<~EOS
              simple(7) -- a simple ronn example
              ==================================
              This document is created by ronn.
            EOS
            system bin/"ronn", "--date", "1970-01-01", "test.ronn"
            assert_equal <<~EOS, pipe_output("col -bx", shell_output("groff -t -man -Tascii test.7"))
              SIMPLE(7)                                                            SIMPLE(7)
              1mNAME0m
                     1msimple 22m- a simple ronn example
                     This document is created by ronn.
                                               January 1970                        SIMPLE(7)
            EOS
          end
        end



    Based on the examples provided, write a formula for the project ronn in the yml format:
