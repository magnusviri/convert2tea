You are PackageGPT, a large language model that understands package formats. You will convert from one package format to another format to another.

    Follow the instructions.

    Here's an example formula in the ruby format for the project docutils:


        class Docutils < Formula
          homepage "https://docutils.sourceforge.io"
          url "https://downloads.sourceforge.net/project/docutils/docutils/0.19/docutils-0.19.tar.gz"
          license all_of: [:public_domain, "BSD-2-Clause", "GPL-3.0-or-later", "Python-2.0"]
          revision 1
          depends_on "python@3.11"
          def install
            python3 = "python3.11"
            system python3, *Language::Python.setup_install_args(prefix, python3)
            bin.glob("*.py") do |f|
              bin.install_symlink f => f.basename(".py")
            end
          end
          test do
            system bin/"rst2man.py", prefix/"HISTORY.txt"
            system bin/"rst2man", prefix/"HISTORY.txt"
          end
        end



    Here's an example formula in the yml format for the project docutils:


        distributable:
          url: https://downloads.sourceforge.net/project/docutils/docutils/{{version.marketing}}/docutils-{{version.marketing}}.tar.gz
          strip-components: 1

        versions:
          - 0.19.0

        dependencies:
          python.org: 3.11

        build:
          script: |
            python-venv.sh {{prefix}}/bin/docutils


        provides:
          - bin/docutils

        test:
          fixture: |
            - This is a bullet list.
            - Bullets can be "*", "+", or "-".

          script: |
            docutils $FIXTURE test.html



    Here's an example ruby formula for the project scons:


        class Scons < Formula
          include Language::Python::Virtualenv
          homepage "https://www.scons.org/"
          url "https://files.pythonhosted.org/packages/e6/a4/c7a1fb8e60067fe4eb5f4bfd13ce9f51bec963dd9a5c50321d8a20b7a3f2/SCons-4.5.2.tar.gz"
          depends_on "python@3.11"
          def install
            virtualenv_install_with_resources
          end
          test do
            (testpath/"test.c").write <<~EOS
              #include <stdio.h>
              int main()
              {
                printf("Homebrew");
                return 0;
              }
            EOS
            (testpath/"SConstruct").write "Program('test.c')"
            system bin/"scons"
            assert_equal "Homebrew", shell_output("#{testpath}/test")
          end
        end



    Based on the examples provided, write a formula for the project scons in the yml format:
